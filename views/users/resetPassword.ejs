<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Reset Password</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background-color: rgb(51, 51, 51);
            color: white;
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 10px;
        }

        .card {
            background-color: white;
            color: rgb(51, 51, 51);
            border-radius: 12px;
            width: 100%;
            max-width: 350px;
            padding: 15px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        }

        .btn-primary {
            background-color: rgb(209, 0, 36);
            border: none;
            padding: 6px;
            font-size: 14px;
        }

        .btn-primary:hover {
            background-color: rgb(180, 0, 30);
        }

        .btn-secondary {
            background-color: #6c757d;
            border: none;
            padding: 6px;
            font-size: 14px;
        }

        .btn-secondary:hover {
            background-color: #5a6268;
        }

        .form-control {
            padding: 6px;
            font-size: 14px;
        }

        label {
            font-size: 13px;
            margin-bottom: 3px;
        }

        h2 {
            font-size: 20px;
        }

        p {
            font-size: 13px;
        }

        .error-message {
            color: red;
            font-size: 0.75rem;
        }

        .success-message {
            color: green;
            font-size: 0.75rem;
        }

        .info-text {
            font-size: 12px;
            color: #666;
            margin-bottom: 15px;
        }

        .password-strength {
            font-size: 11px;
            margin-top: 5px;
        }

        .strength-weak { color: #dc3545; }
        .strength-medium { color: #ffc107; }
        .strength-strong { color: #28a745; }
    </style>
</head>

<body>
    <div class="card">
        <h2 class="text-center mb-2">Reset Password</h2>
        <p class="info-text text-center">Enter your new password below.</p>
        
        <% if (typeof msg !== 'undefined' && msg) { %>
        <div class="text-center alert alert-danger">
            <%= msg %>
        </div>
        <% } %>

        <% if (typeof success !== 'undefined' && success) { %>
        <div class="text-center alert alert-success">
            <%= success %>
        </div>
        <% } %>

        <form action="/reset-password-with-otp" method="post" id="resetPasswordForm">
            <div class="mb-2">
                <label for="password" class="form-label">New Password</label>
                <input type="password" name="password" class="form-control" id="password" placeholder="Enter new password" required>
                <div id="passwordStrength" class="password-strength"></div>
                <div id="errorPassword" class="error-message"></div>
            </div>
            
            <div class="mb-2">
                <label for="confirmPassword" class="form-label">Confirm Password</label>
                <input type="password" name="confirmPassword" class="form-control" id="confirmPassword" placeholder="Confirm new password" required>
                <div id="errorConfirmPassword" class="error-message"></div>
            </div>
            
            <button type="submit" class="btn btn-primary w-100 mt-1" id="submitBtn">Reset Password</button>
        </form>

        <div class="text-center mt-3">
            <a href="/login" class="btn btn-secondary w-100">Back to Login</a>
        </div>
    </div>

    <script>
        const passwordInput = document.getElementById('password');
        const confirmPasswordInput = document.getElementById('confirmPassword');
        const errorPassword = document.getElementById('errorPassword');
        const errorConfirmPassword = document.getElementById('errorConfirmPassword');
        const passwordStrength = document.getElementById('passwordStrength');
        const resetPasswordForm = document.getElementById('resetPasswordForm');
        const submitBtn = document.getElementById('submitBtn');

        function checkPasswordStrength(password) {
            let strength = 0;
            let feedback = [];

            if (password.length >= 8) strength++;
            else feedback.push("at least 8 characters");

            if (/[a-z]/.test(password)) strength++;
            else feedback.push("lowercase letter");

            if (/[A-Z]/.test(password)) strength++;
            else feedback.push("uppercase letter");

            if (/[0-9]/.test(password)) strength++;
            else feedback.push("number");

            if (/[^A-Za-z0-9]/.test(password)) strength++;
            else feedback.push("special character");

            return { strength, feedback };
        }

        function passwordValidation() {
            const password = passwordInput.value.trim();
            const { strength, feedback } = checkPasswordStrength(password);

            if (password.length < 8) {
                errorPassword.style.display = "block";
                errorPassword.innerHTML = "Password must be at least 8 characters";
                passwordStrength.innerHTML = "";
                return false;
            } else {
                errorPassword.style.display = "none";
                errorPassword.innerHTML = "";

                // Show strength indicator
                if (strength <= 2) {
                    passwordStrength.innerHTML = "Weak password";
                    passwordStrength.className = "password-strength strength-weak";
                } else if (strength <= 4) {
                    passwordStrength.innerHTML = "Medium strength";
                    passwordStrength.className = "password-strength strength-medium";
                } else {
                    passwordStrength.innerHTML = "Strong password";
                    passwordStrength.className = "password-strength strength-strong";
                }

                if (feedback.length > 0) {
                    passwordStrength.innerHTML += ` (Missing: ${feedback.join(', ')})`;
                }

                return true;
            }
        }

        function confirmPasswordValidation() {
            const password = passwordInput.value.trim();
            const confirmPassword = confirmPasswordInput.value.trim();

            if (password !== confirmPassword) {
                errorConfirmPassword.style.display = "block";
                errorConfirmPassword.innerHTML = "Passwords do not match";
                return false;
            } else {
                errorConfirmPassword.style.display = "none";
                errorConfirmPassword.innerHTML = "";
                return true;
            }
        }

        document.addEventListener("DOMContentLoaded", function () {
            resetPasswordForm.addEventListener('submit', (e) => {
                const isPasswordValid = passwordValidation();
                const isConfirmPasswordValid = confirmPasswordValidation();

                if (!isPasswordValid || !isConfirmPasswordValid) {
                    e.preventDefault();
                } else {
                    // Show loading state
                    submitBtn.innerHTML = 'Resetting...';
                    submitBtn.disabled = true;
                }
            });

            passwordInput.addEventListener('input', passwordValidation);
            confirmPasswordInput.addEventListener('input', confirmPasswordValidation);
        });
    </script>
</body>

</html>